{"version":3,"sources":["redux/actions.js","redux/selectors.js","components/Header.js","components/MarkAll.js","components/InfoPanel.js","components/Input.js","components/TodoItem.js","components/Todo.js","redux/reducer.js","redux/createStore.js","App.js","index.js"],"names":["ACTION_TYPE","rootSelector","state","itemsLeft","createSelector","items","filter","i","completed","displaySelect","display","todosItemsSelect","inputValueSelect","id","input","currentValueSelect","currentValue","filtered","filteredItem","connect","inputValue","dispatch","inputHandler","value","type","e","addItem","className","onChange","onKeyDown","key","placeholder","todosItems","markAllItems","length","onClick","htmlFor","itemLeft","changeDisplayMode","mode","displayMode","removeCompleted","mark","href","outsideClick","updateInputHandler","onInputKeyDown","onOutsideClick","style","paddingLeft","removeItem","itemId","toggleItem","doubleClickOnInput","t","edit","title","todosItem","isEditing","onDoubleClick","checked","getLocalStorage","data","useEffect","localStorage","getItem","setItem","JSON","stringify","map","todos","initialState","nextId","markAll","store","createStore","action","target","persist","trim","item","parse","keyCode","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.189b9414.chunk.js","sourcesContent":["export const ACTION_TYPE = {\n  INPUT_HANDLER: 'INPUT_HANDLER',\n  ADD_ITEM: 'add_item',\n  REMOVE_ITEM: 'remove_item',\n  TOGGLE_ITEM: 'toggle_item',\n  REMOVE_COMPETED: 'remove_completed',\n  CHANGE_DISPLAY_MODE: 'change_display_mode',\n  MARK_ALL_ITEMS: 'mark_all_items',\n  EDIT_INPUT: 'edit_input',\n  ON_INPUT_KEY_DOWN: 'on_input_key_down',\n  LOCAL_STORAGE: 'LOCAL_STORAGE',\n  UPDATE_INPUT_HANDLER: 'UPDATE_INPUT_HANDLER',\n  OUTSIDE_CLICK: 'OUTSIDE_CLICK',\n};\n\nexport const inputHandler = e => ({\n  type: ACTION_TYPE.INPUT_HANDLER,\n  e,\n});\n\nexport const updateInputHandler = e => ({\n  type: ACTION_TYPE.UPDATE_INPUT_HANDLER,\n  e,\n});\n\nexport const addItem = e => ({\n  type: ACTION_TYPE.ADD_ITEM,\n  e,\n});\n\nexport const removeItem = itemId => ({\n  type: ACTION_TYPE.REMOVE_ITEM,\n  itemId,\n});\n\nexport const toggleItem = itemId => ({\n  type: ACTION_TYPE.TOGGLE_ITEM,\n  itemId,\n});\n\nexport const changeDisplayMode = displayMode => ({\n  type: ACTION_TYPE.CHANGE_DISPLAY_MODE,\n  displayMode,\n});\n\nexport const removeCompleted = mark => ({\n  type: ACTION_TYPE.REMOVE_COMPETED,\n  mark,\n});\n\nexport const markAllItems = () => ({\n  type: ACTION_TYPE.MARK_ALL_ITEMS,\n});\n\nexport const doubleClickOnInput = (edit, id, title) => ({\n  type: ACTION_TYPE.EDIT_INPUT,\n  edit,\n  id,\n  title,\n});\n\nexport const onInputKeyDown = (e, id) => ({\n  type: ACTION_TYPE.ON_INPUT_KEY_DOWN,\n  e,\n  id,\n});\n\nexport const getLocalStorage = data => ({\n  type: ACTION_TYPE.LOCAL_STORAGE,\n  data,\n});\n\nexport const outsideClick = id => ({\n  type: ACTION_TYPE.OUTSIDE_CLICK,\n  id,\n});\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const itemsLeft = createSelector(\n  rootSelector,\n  ({ items }) => (\n    items.filter(i => !i.completed)\n  ),\n);\n\nexport const displaySelect = createSelector(\n  rootSelector,\n  ({ display }) => display,\n);\n\nexport const todosItemsSelect = createSelector(\n  rootSelector,\n  ({ items }) => items,\n);\n\nexport const idSelect = createSelector(\n  rootSelector,\n  ({ id }) => id,\n);\n\nexport const inputValueSelect = createSelector(\n  rootSelector,\n  ({ input }) => input,\n);\n\nexport const currentValueSelect = createSelector(\n  rootSelector,\n  ({ currentValue }) => currentValue,\n);\n\nexport const filtered = createSelector(\n  rootSelector,\n  ({ items, display }) => {\n    let filteredItem;\n\n    if (display === 'all') {\n      filteredItem = items;\n    }\n\n    if (display === 'completed') {\n      filteredItem = items.filter(i => i.completed);\n    }\n\n    if (display === 'active') {\n      filteredItem = items.filter(i => !i.completed);\n    }\n\n    return filteredItem;\n  },\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { inputHandler, addItem } from '../redux/actions';\nimport { inputValueSelect } from '../redux/selectors';\n\nconst Header = ({ inputHandler, addItem, inputValue }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n\n    <input\n      onChange={e => inputHandler(e)}\n      onKeyDown={e => addItem(e.key)}\n      value={inputValue}\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  inputValue: inputValueSelect(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  inputHandler: value => dispatch(inputHandler(value)),\n  addItem: e => dispatch(addItem(e)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { todosItemsSelect } from '../redux/selectors';\nimport { markAllItems } from '../redux/actions';\n\nconst MarkAll = ({ todosItems, markAllItems }) => (\n  <div className={todosItems.length === 0 ? 'hidden' : null}>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      onClick={markAllItems}\n      className=\"toggle-all\"\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  todosItems: todosItemsSelect(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  markAllItems: () => dispatch(markAllItems()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkAll);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { itemsLeft, displaySelect, todosItemsSelect } from '../redux/selectors';\nimport { changeDisplayMode, removeCompleted } from '../redux/actions';\n\nconst InfoPanel = ({\n  itemLeft,\n  display,\n  changeDisplayMode,\n  todosItems,\n  removeCompleted,\n}) => (\n  <footer className={todosItems.length === 0 ? 'block-none' : 'footer'}>\n    <span className=\"todo-count\">{`${itemLeft.length} items left`}</span>\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          onClick={() => changeDisplayMode('all')}\n          className={display === 'all' ? 'selected' : null}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={() => changeDisplayMode('active')}\n          className={display === 'active' ? 'selected' : null}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={() => changeDisplayMode('completed')}\n          className={display === 'completed' ? 'selected' : null}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={() => removeCompleted()}\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nconst mapStateToProps = state => ({\n  itemLeft: itemsLeft(state),\n  display: displaySelect(state),\n  todosItems: todosItemsSelect(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeDisplayMode: mode => dispatch(changeDisplayMode(mode)),\n  removeCompleted: () => dispatch(removeCompleted()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoPanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport {\n  outsideClick,\n  updateInputHandler,\n  onInputKeyDown,\n} from '../redux/actions';\nimport { currentValueSelect } from '../redux/selectors';\n\nconst Input = ({\n  currentValue,\n  updateInputHandler,\n  onInputKeyDown,\n  id,\n  outsideClick,\n}) => (\n  <OutsideClickHandler\n    onOutsideClick={() => {\n      outsideClick(id);\n    }}\n  >\n    <input\n      onChange={e => updateInputHandler(e)}\n      value={currentValue}\n      onKeyDown={key => onInputKeyDown(key, id)}\n      className=\"edit\"\n      style={{ paddingLeft: '60px' }}\n    />\n  </OutsideClickHandler>\n);\n\nconst mapStateToProps = state => ({\n  currentValue: currentValueSelect(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  outsideClick: id => dispatch(outsideClick(id)),\n  updateInputHandler: e => dispatch(updateInputHandler(e)),\n  onInputKeyDown: (key, id) => dispatch(onInputKeyDown(key, id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Input);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Input from './Input';\nimport { removeItem, toggleItem, doubleClickOnInput } from '../redux/actions';\n\nconst TodoItem = ({\n  todosItem,\n  removeItem,\n  toggleItem,\n  completed,\n  doubleClickOnInput,\n}) => {\n  const { title, isEditing, id } = todosItem;\n\n  return (\n    <>\n      {!isEditing ? (\n        <li\n          className={completed ? 'completed' : null}\n          onDoubleClick={() => doubleClickOnInput(isEditing, id, title)}\n        >\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              checked={completed}\n              onChange={() => toggleItem(id)}\n            />\n            <label>{title}</label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => removeItem(id)}\n            />\n          </div>\n        </li>\n      ) : (\n        <Input id={id} />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeItem: id => dispatch(removeItem(id)),\n  toggleItem: id => dispatch(toggleItem(id)),\n  doubleClickOnInput: (e, id, t) => dispatch(doubleClickOnInput(e, id, t)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport MarkAll from './MarkAll';\nimport InfoPanel from './InfoPanel';\nimport TodoItem from './TodoItem';\nimport { getLocalStorage } from '../redux/actions';\nimport { filtered, todosItemsSelect } from '../redux/selectors';\n\nconst Todo = ({ todosItems, filteredItem, getLocalStorage }) => {\n  useEffect(() => {\n    const data = localStorage.getItem('myData');\n\n    getLocalStorage(data);\n  }, [getLocalStorage]);\n\n  useEffect(() => {\n    localStorage.setItem('myData', JSON.stringify(todosItems));\n  }, [todosItems]);\n\n  return (\n    <section className=\"todoapp\">\n      <Header />\n\n      <section className=\"main\">\n        <MarkAll />\n\n        <ul className=\"todo-list\">\n          {filteredItem.length !== 0\n            ? filteredItem.map((todos) => {\n              const { id, completed } = todos;\n\n              return (\n                <TodoItem todosItem={todos} key={id} completed={completed} />\n              );\n            })\n            : null}\n        </ul>\n      </section>\n\n      <InfoPanel />\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filteredItem: filtered(state),\n  todosItems: todosItemsSelect(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getLocalStorage: data => dispatch(getLocalStorage(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n","import { ACTION_TYPE } from './actions';\n\nconst initialState = {\n  input: '',\n  nextId: 1,\n  items: [],\n  display: 'all',\n  markAll: true,\n  currentValue: '',\n};\n\nexport function getNextState(state = initialState, action) {\n  switch (action.type) {\n    // Input handler on added\n    case ACTION_TYPE.INPUT_HANDLER: {\n      const { value } = action.e.target;\n\n      action.e.persist();\n\n      return {\n        ...state,\n        input: value,\n      };\n    }\n\n    // Input handler on update\n    case ACTION_TYPE.UPDATE_INPUT_HANDLER: {\n      const { value } = action.e.target;\n\n      action.e.persist();\n\n      return {\n        ...state,\n        currentValue: value,\n      };\n    }\n\n    // Add new todos\n    case ACTION_TYPE.ADD_ITEM: {\n      if (action.e === 'Enter' && state.input.trim() !== '') {\n        return {\n          ...state,\n          items: [\n            ...state.items,\n            {\n              id: state.nextId,\n              title: state.input,\n              completed: false,\n              isEditing: false,\n            },\n          ],\n          nextId: state.nextId + 1,\n          input: '',\n        };\n      }\n\n      return state;\n    }\n\n    // Remove todos item\n    case ACTION_TYPE.REMOVE_ITEM: {\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.itemId),\n      };\n    }\n\n    // Check item todos is active or completed\n    case ACTION_TYPE.TOGGLE_ITEM: {\n      return {\n        ...state,\n        items: state.items.map((item) => {\n          if (item.id !== action.itemId) {\n            return item;\n          }\n\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }),\n      };\n    }\n\n    // Remove all completed todos\n    case ACTION_TYPE.REMOVE_COMPETED: {\n      return {\n        ...state,\n        items: state.items.filter(item => !item.completed),\n      };\n    }\n\n    // Change display mode all, active or completed\n    case ACTION_TYPE.CHANGE_DISPLAY_MODE: {\n      return {\n        ...state,\n        display: action.displayMode,\n      };\n    }\n\n    // Mark all todos\n    case ACTION_TYPE.MARK_ALL_ITEMS: {\n      return {\n        ...state,\n        markAll: !state.markAll,\n        items: [...state.items].map(item => ({\n          id: item.id,\n          title: item.title,\n          completed: state.markAll,\n        })),\n      };\n    }\n\n    // Get request on local storage\n    case ACTION_TYPE.LOCAL_STORAGE: {\n      return {\n        ...state,\n        items: JSON.parse(action.data),\n      };\n    }\n\n    // Double click on input and after we can to update this input\n    case ACTION_TYPE.EDIT_INPUT: {\n      return {\n        ...state,\n        items: state.items.map((item) => {\n          if (item.id !== action.id) {\n            return item;\n          }\n\n          return {\n            ...item,\n            isEditing: !action.isEditing,\n          };\n        }),\n        currentValue: action.title,\n      };\n    }\n\n    // Key down Escape and Enter on update input\n    case ACTION_TYPE.ON_INPUT_KEY_DOWN: {\n      action.e.persist();\n\n      const { e, id } = action;\n\n      if (e.keyCode === 27) {\n        return {\n          ...state,\n          items: state.items.map(item => ({\n            ...item,\n            isEditing: false,\n          })),\n        };\n      }\n\n      if (e.key === 'Enter' && state.currentValue.trim() !== '') {\n        return {\n          ...state,\n          items: state.items.map((item) => {\n            if (item.id !== id) {\n              return item;\n            }\n\n            return {\n              ...item,\n              title: state.currentValue,\n              isEditing: false,\n            };\n          }),\n          currentValue: '',\n        };\n      }\n\n      return state;\n    }\n\n    // Outside click to close this open input\n    case ACTION_TYPE.OUTSIDE_CLICK: {\n      const { id } = action;\n\n      return {\n        ...state,\n        items: state.items.map((item) => {\n          if (item.id !== id) {\n            return item;\n          }\n\n          return {\n            ...item,\n            isEditing: false,\n          };\n        }),\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport { getNextState } from './reducer';\n\nexport const store = createStore(\n  getNextState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Todo from './components/Todo';\nimport { store } from './redux/createStore';\n\nconst App = () => (\n  <Provider store={store}>\n    <Todo />\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}