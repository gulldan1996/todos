{"version":3,"sources":["components/Header.js","components/MarkAll.js","components/InfoPanel.js","components/TodoItem.js","redux/actions.js","redux/selectors.js","components/Todo.js","redux/reducer.js","redux/createStore.js","App.js","index.js"],"names":["Header","updateInput","addItem","inputValue","className","onChange","e","target","value","onKeyDown","key","placeholder","MarkAll","todosItems","length","type","id","htmlFor","InfoPanel","itemsLeft","display","changeDisplayMode","removeCompleted","href","onClick","TodoItem","todosItem","removeItem","toggleItem","completed","markAll","title","ACTION_TYPE","createSelector","state","items","filter","i","connect","input","nextId","dispatch","itemId","mode","displayMode","mark","map","todos","initialState","store","createStore","action","trim","item","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4090c242.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = ({ updateInput, addItem, inputValue }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n\n    <input\n      onChange={e => updateInput(e.target.value)}\n      onKeyDown={e => addItem(e.key)}\n      value={inputValue}\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst MarkAll = ({ todosItems }) => (\n  <div className={todosItems.length === 0 ? 'hidden' : null}>\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n  </div>\n);\n\nexport default MarkAll;\n","import React from 'react';\n\nconst InfoPanel = ({\n  itemsLeft,\n  display,\n  changeDisplayMode,\n  todosItems,\n  removeCompleted,\n}) => (\n  <footer className={todosItems.length === 0 ? 'block-none' : 'footer'}>\n    <span className=\"todo-count\">{`${itemsLeft.length} items left`}</span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          onClick={() => changeDisplayMode('all')}\n          className={display === 'all' ? 'selected' : null}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={() => changeDisplayMode('active')}\n          className={display === 'active' ? 'selected' : null}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={() => changeDisplayMode('completed')}\n          className={display === 'completed' ? 'selected' : null}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={() => removeCompleted()}\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nexport default InfoPanel;\n","import React from 'react';\n\nconst TodoItem = ({\n  todosItem,\n  removeItem,\n  id,\n  toggleItem,\n  completed,\n  display,\n  markAll,\n}) => (\n  <li className={completed ? 'completed' : null}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={id}\n        onClick={() => toggleItem(id, markAll)}\n      />\n      <label htmlFor={id}>{todosItem.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => removeItem(id)}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nexport default TodoItem;\n","export const ACTION_TYPE = {\n  UPDATE_INPUT: 'update_input',\n  ADD_ITEM: 'add_item',\n  REMOVE_ITEM: 'remove_item',\n  TOGGLE_ITEM: 'toggle_item',\n  REMOVE_COMPETED: 'remove_completed',\n  CHANGE_DISPLAY_MODE: 'change_display_mode',\n};\n\nexport const updateInput = inputValue => ({\n  type: ACTION_TYPE.UPDATE_INPUT,\n  inputValue,\n});\n\nexport const addItem = e => ({\n  type: ACTION_TYPE.ADD_ITEM,\n  e,\n});\n\nexport const removeItem = itemId => ({\n  type: ACTION_TYPE.REMOVE_ITEM,\n  itemId,\n});\n\nexport const toggleItem = itemId => ({\n  type: ACTION_TYPE.TOGGLE_ITEM,\n  itemId,\n});\n\nexport const removeCompleted = mark => ({\n  type: ACTION_TYPE.REMOVE_COMPETED,\n  mark,\n});\n\nexport const changeDisplayMode = displayMode => ({\n  type: ACTION_TYPE.CHANGE_DISPLAY_MODE,\n  displayMode,\n});\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const itemsLeft = createSelector(\n  rootSelector,\n  ({ items }) => (\n    items.filter(i => !i.completed)\n  ),\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport MarkAll from './MarkAll';\nimport InfoPanel from './InfoPanel';\nimport TodoItem from './TodoItem';\nimport {\n  updateInput,\n  addItem,\n  removeItem,\n  toggleItem,\n  changeDisplayMode,\n  removeCompleted,\n} from '../redux/actions';\nimport { itemsLeft } from '../redux/selectors';\n\nconst Todo = ({\n  updateInput,\n  addItem,\n  inputValue,\n  todosItems,\n  removeItem,\n  toggleItem,\n  itemsLeft,\n  display,\n  changeDisplayMode,\n  removeCompleted,\n}) => {\n\n  return (\n    <section className=\"todoapp\">\n      <Header\n        updateInput={updateInput}\n        addItem={addItem}\n        inputValue={inputValue}\n      />\n\n      <section className=\"main\">\n        <MarkAll todosItems={todosItems} />\n\n        <ul className=\"todo-list\">\n          {todosItems.length !== 0\n            ? todosItems.map((todos) => {\n              const { id, completed } = todos;\n\n              return (\n                <TodoItem\n                  todosItem={todos}\n                  toggleItem={toggleItem}\n                  key={id}\n                  id={id}\n                  removeItem={removeItem}\n                  completed={completed}\n                  itemsLeft={itemsLeft}\n                  display={display}\n                />\n              );\n            })\n            : null}\n        </ul>\n      </section>\n\n      <InfoPanel\n        itemsLeft={itemsLeft}\n        display={display}\n        changeDisplayMode={changeDisplayMode}\n        todosItems={todosItems}\n        removeCompleted={removeCompleted}\n      />\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  inputValue: state.input,\n  display: state.display,\n  id: state.nextId,\n  todosItems: state.items,\n  itemsLeft: itemsLeft(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateInput: value => dispatch(updateInput(value)),\n  addItem: e => dispatch(addItem(e)),\n  removeItem: id => dispatch(removeItem(id)),\n  toggleItem: id => dispatch(toggleItem(id)),\n  changeDisplayMode: mode => dispatch(changeDisplayMode(mode)),\n  removeCompleted: () => dispatch(removeCompleted()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n","import { ACTION_TYPE } from './actions';\n\nconst initialState = {\n  input: '',\n  nextId: 1,\n  items: [],\n  display: 'all',\n};\n\nexport function getNextState(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPE.UPDATE_INPUT: {\n      return {\n        ...state,\n        input: action.inputValue,\n      };\n    }\n\n    case ACTION_TYPE.ADD_ITEM: {\n      if (action.e === 'Enter' && state.input.trim() !== '') {\n        return {\n          ...state,\n          items: [\n            ...state.items,\n            {\n              id: state.nextId,\n              title: state.input,\n              completed: false,\n            },\n          ],\n          nextId: state.nextId + 1,\n          input: '',\n        };\n      }\n\n      return state;\n    }\n\n    case ACTION_TYPE.REMOVE_ITEM: {\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.itemId),\n      };\n    }\n\n    case ACTION_TYPE.TOGGLE_ITEM: {\n      return {\n        ...state,\n        items: state.items.map((item) => {\n          if (item.id !== action.itemId) {\n            return item;\n          }\n\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }),\n      };\n    }\n\n    case ACTION_TYPE.REMOVE_COMPETED: {\n      return {\n        ...state,\n        items: state.items.filter(item => !item.completed),\n      };\n    }\n\n    case ACTION_TYPE.CHANGE_DISPLAY_MODE: {\n      return {\n        ...state,\n        display: action.displayMode,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport { getNextState } from './reducer';\n\nexport const store = createStore(\n  getNextState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Todo from './components/Todo';\nimport { store } from './redux/createStore';\n\nconst App = () => (\n  <Provider store={store}>\n    <Todo />\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}