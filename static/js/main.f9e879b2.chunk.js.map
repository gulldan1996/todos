{"version":3,"sources":["components/Header.js","components/MarkAll.js","components/InfoPanel.js","components/Input.js","components/TodoItem.js","redux/actions.js","redux/selectors.js","components/Todo.js","redux/reducer.js","redux/createStore.js","App.js","index.js"],"names":["Header","updateInput","addItem","inputValue","className","onChange","e","target","value","onKeyDown","key","placeholder","MarkAll","todosItems","markAllItems","length","type","id","onClick","htmlFor","InfoPanel","itemsLeft","display","changeDisplayMode","removeCompleted","href","Input","currentValue","updateEditInput","onInputKeyDown","onKeyPress","TodoItem","todosItem","removeItem","toggleItem","completed","editInputClick","title","isEditing","onDoubleClick","checked","ACTION_TYPE","createSelector","state","items","filter","i","connect","input","nextId","dispatch","itemId","mode","displayMode","mark","edit","v","filteredItem","filterCompleted","filterActive","map","todos","initialState","markAll","store","createStore","action","trim","item","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9e879b2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = ({ updateInput, addItem, inputValue }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n\n    <input\n      onChange={e => updateInput(e.target.value)}\n      onKeyDown={e => addItem(e.key)}\n      value={inputValue}\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst MarkAll = ({ todosItems, markAllItems }) => (\n  <div className={todosItems.length === 0 ? 'hidden' : null}>\n    <input type=\"checkbox\" id=\"toggle-all\" onClick={markAllItems} className=\"toggle-all\" />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n  </div>\n);\n\nexport default MarkAll;\n","import React from 'react';\n\nconst InfoPanel = ({\n  itemsLeft,\n  display,\n  changeDisplayMode,\n  todosItems,\n  removeCompleted\n}) => {\n  return (\n    <footer className={todosItems.length === 0 ? 'block-none' : 'footer'}>\n      <span className=\"todo-count\">{`${itemsLeft.length} items left`}</span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            onClick={() => changeDisplayMode('all')}\n            className={display === 'all' ? 'selected' : null}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            onClick={() => changeDisplayMode('active')}\n            className={display === 'active' ? 'selected' : null}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            onClick={() => changeDisplayMode('completed')}\n            className={display === 'completed' ? 'selected' : null}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={() => removeCompleted()}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nexport default InfoPanel;\n","import React from 'react';\n\nconst Input = ({ currentValue, updateEditInput, onInputKeyDown, id }) => (\n  <input\n    onChange={e => updateEditInput(e.target.value)}\n    value={currentValue}\n    onKeyPress={key => onInputKeyDown(key, id)}\n    className=\"edit\"\n  />\n);\n\nexport default Input;\n","import React from 'react';\nimport Input from './Input';\n\nconst TodoItem = ({\n  todosItem,\n  removeItem,\n  toggleItem,\n  completed,\n  editInputClick,\n  updateEditInput,\n  onInputKeyDown,\n  currentValue,\n}) => {\n  const { title, isEditing, id } = todosItem;\n\n  return (\n    <>\n      {!isEditing ? (\n        <li\n          className={completed ? 'completed' : null}\n          onDoubleClick={() => editInputClick(isEditing, id, title)}\n        >\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              checked={completed}\n              onChange={() => toggleItem(id)}\n            />\n            <label>{title}</label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => removeItem(id)}\n            />\n          </div>\n        </li>\n      ) : (\n        <Input\n          updateEditInput={updateEditInput}\n          inputValue={currentValue}\n          onInputKeyDown={onInputKeyDown}\n          id={id}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TodoItem;\n","export const ACTION_TYPE = {\n  UPDATE_INPUT: 'update_input',\n  ADD_ITEM: 'add_item',\n  REMOVE_ITEM: 'remove_item',\n  TOGGLE_ITEM: 'toggle_item',\n  REMOVE_COMPETED: 'remove_completed',\n  CHANGE_DISPLAY_MODE: 'change_display_mode',\n  MARK_ALL_ITEMS: 'mark_all_items',\n  EDIT_INPUT: 'edit_input',\n  ON_INPUT_KEY_DOWN: 'on_input_key_down',\n  UPDATE_INPUT_EDIT: 'UPDATE_INPUT_EDIT',\n};\n\nexport const updateInput = inputValue => ({\n  type: ACTION_TYPE.UPDATE_INPUT,\n  inputValue,\n});\n\nexport const addItem = e => ({\n  type: ACTION_TYPE.ADD_ITEM,\n  e,\n});\n\nexport const removeItem = itemId => ({\n  type: ACTION_TYPE.REMOVE_ITEM,\n  itemId,\n});\n\nexport const toggleItem = itemId => ({\n  type: ACTION_TYPE.TOGGLE_ITEM,\n  itemId,\n});\n\nexport const changeDisplayMode = displayMode => ({\n  type: ACTION_TYPE.CHANGE_DISPLAY_MODE,\n  displayMode,\n});\n\nexport const removeCompleted = mark => ({\n  type: ACTION_TYPE.REMOVE_COMPETED,\n  mark,\n});\n\nexport const markAllItems = () => ({\n  type: ACTION_TYPE.MARK_ALL_ITEMS,\n});\n\nexport const editInputClick = (edit, id, title) => ({\n  type: ACTION_TYPE.EDIT_INPUT,\n  edit,\n  id,\n  title,\n});\n\nexport const onInputKeyDown = (key, id) => ({\n  type: ACTION_TYPE.ON_INPUT_KEY_DOWN,\n  key,\n  id,\n});\n\nexport const updateEditInput = value => ({\n  type: ACTION_TYPE.UPDATE_INPUT_EDIT,\n  value,\n});\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const itemsLeft = createSelector(\n  rootSelector,\n  ({ items }) => (\n    items.filter(i => !i.completed)\n  ),\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport MarkAll from './MarkAll';\nimport InfoPanel from './InfoPanel';\nimport TodoItem from './TodoItem';\nimport {\n  updateInput,\n  addItem,\n  removeItem,\n  toggleItem,\n  changeDisplayMode,\n  removeCompleted,\n  markAllItems,\n  editInputClick,\n  onInputKeyDown,\n  updateEditInput,\n} from '../redux/actions';\nimport { itemsLeft } from '../redux/selectors';\n\nconst Todo = ({\n  updateInput,\n  addItem,\n  inputValue,\n  todosItems,\n  removeItem,\n  toggleItem,\n  itemsLeft,\n  display,\n  changeDisplayMode,\n  removeCompleted,\n  markAllItems,\n  editInputClick,\n  onInputKeyDown,\n  currentValue,\n  updateEditInput,\n}) => {\n  const filterCompleted = todosItems.filter(i => i.completed);\n  const filterActive = todosItems.filter(i => !i.completed);\n  let filteredItem;\n\n  if (display === 'all') {\n    filteredItem = todosItems;\n  }\n\n  if (display === 'completed') {\n    filteredItem = filterCompleted;\n  }\n\n  if (display === 'active') {\n    filteredItem = filterActive;\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <Header\n        updateInput={updateInput}\n        addItem={addItem}\n        inputValue={inputValue}\n      />\n\n      <section className=\"main\">\n        <MarkAll todosItems={todosItems} markAllItems={markAllItems} />\n\n        <ul className=\"todo-list\">\n          {filteredItem.length !== 0\n            ? filteredItem.map(todos => {\n              const { id, completed } = todos;\n\n              return (\n                <TodoItem\n                  todosItem={todos}\n                  toggleItem={toggleItem}\n                  key={id}\n                  removeItem={removeItem}\n                  completed={completed}\n                  display={display}\n                  editInputClick={editInputClick}\n                  updateEditInput={updateEditInput}\n                  addItem={addItem}\n                  itemsLeft={itemsLeft}\n                  currentValue={currentValue}\n                  onInputKeyDown={onInputKeyDown}\n                />\n              );\n            })\n            : null}\n        </ul>\n      </section>\n\n      <InfoPanel\n        itemsLeft={itemsLeft}\n        display={display}\n        changeDisplayMode={changeDisplayMode}\n        todosItems={todosItems}\n        removeCompleted={removeCompleted}\n      />\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  inputValue: state.input,\n  display: state.display,\n  id: state.nextId,\n  todosItems: state.items,\n  itemsLeft: itemsLeft(state),\n  currentValue: state.currentValue,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateInput: value => dispatch(updateInput(value)),\n  addItem: e => dispatch(addItem(e)),\n  removeItem: id => dispatch(removeItem(id)),\n  toggleItem: id => dispatch(toggleItem(id)),\n  changeDisplayMode: mode => dispatch(changeDisplayMode(mode)),\n  removeCompleted: () => dispatch(removeCompleted()),\n  markAllItems: () => dispatch(markAllItems()),\n  editInputClick: (e, id, title) => dispatch(editInputClick(e, id, title)),\n  onInputKeyDown: (key, id) => dispatch(onInputKeyDown(key, id)),\n  updateEditInput: v => dispatch(updateEditInput(v)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n","import { ACTION_TYPE } from './actions';\n\nconst initialState = {\n  input: '',\n  nextId: 1,\n  items: [],\n  display: 'all',\n  markAll: true,\n};\n\nexport function getNextState(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPE.UPDATE_INPUT: {\n      return {\n        ...state,\n        input: action.inputValue,\n      };\n    }\n\n    case ACTION_TYPE.UPDATE_INPUT_EDIT: {\n      return {\n        ...state,\n        currentValue: action.value,\n      };\n    }\n\n    case ACTION_TYPE.ADD_ITEM: {\n      if (action.e === 'Enter' && state.input.trim() !== '') {\n        return {\n          ...state,\n          items: [\n            ...state.items,\n            {\n              id: state.nextId,\n              title: state.input,\n              completed: false,\n              isEditing: false,\n            },\n          ],\n          nextId: state.nextId + 1,\n          input: '',\n        };\n      }\n\n      return state;\n    }\n\n    case ACTION_TYPE.REMOVE_ITEM: {\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.itemId),\n      };\n    }\n\n    case ACTION_TYPE.TOGGLE_ITEM: {\n      return {\n        ...state,\n        items: state.items.map((item) => {\n          if (item.id !== action.itemId) {\n            return item;\n          }\n\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }),\n      };\n    }\n\n    case ACTION_TYPE.REMOVE_COMPETED: {\n      return {\n        ...state,\n        items: state.items.filter(item => !item.completed),\n      };\n    }\n\n    case ACTION_TYPE.CHANGE_DISPLAY_MODE: {\n      return {\n        ...state,\n        display: action.displayMode,\n      };\n    }\n\n    case ACTION_TYPE.MARK_ALL_ITEMS: {\n      return {\n        ...state,\n        markAll: !state.markAll,\n        items: [...state.items].map((item) => {\n          return {\n            id: item.id,\n            title: item.title,\n            completed: state.markAll,\n          };\n        }),\n      };\n    }\n\n    case ACTION_TYPE.EDIT_INPUT: {\n      return {\n        ...state,\n        items: state.items.map((item) => {\n          if (item.id !== action.id) {\n            return item;\n          }\n\n          return {\n            ...item,\n            isEditing: !action.isEditing,\n          };\n        }),\n        currentValue: action.title,\n      };\n    }\n\n    case ACTION_TYPE.ON_INPUT_KEY_DOWN: {\n      // if (action.key.keyCode === 27 || !state.currentValue) {\n      //   return {\n      //     items: state.items.map((item) => {\n      //       if (item.id !== action.id) {\n      //         return item;\n      //       }\n\n      //       return {\n      //         ...item,\n      //         isEditing: false,\n      //         title: state.currentValue,\n      //       };\n      //     }),\n      //   };\n      // }\n\n      if (action.e === 'Enter' && state.currentValue.trim() !== '') {\n        return {\n          ...state,\n          items: [\n            ...state.items,\n            {\n              id: state.nextId,\n              title: state.currentValue,\n              completed: false,\n              isEditing: false,\n            },\n          ],\n          nextId: state.nextId + 1,\n          currentValue: '',\n        };\n      }\n\n      return state;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport { getNextState } from './reducer';\n\nexport const store = createStore(\n  getNextState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Todo from './components/Todo';\nimport { store } from './redux/createStore';\n\nconst App = () => (\n  <Provider store={store}>\n    <Todo />\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}